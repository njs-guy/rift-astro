---
import { getCollection } from "astro:content";
import DocLayout from "../../layouts/DocLayout.astro";
import PageNav from "../../components/PageNav.astro";

import {
	getDocSidebar,
	getDocSidebarSubsections,
	type DocSideBarItem,
} from "../../scripts/riftConfig";

export async function getStaticPaths() {
	const docPages = await getCollection("docs");

	return docPages.map((page) => ({
		params: {
			slug: page.slug,
		},
		props: {
			page,
		},
	}));
}

function getCurrentSidebarIndex(subsections: DocSideBarItem[], relativeUrl: string) {
	for (let i = 0; i < subsections.length; i++) {
		if (relativeUrl === subsections[i].link) {
			return i;
		}
	}

	return -1; // Return -1 if it wasn't found.
}

const sidebar = getDocSidebar();
const sidebarSubsections = getDocSidebarSubsections();
let relativeUrl = new URL(Astro.url).pathname;
let currentSidebarIndex = getCurrentSidebarIndex(sidebarSubsections, relativeUrl);

// PageNav values
let previous = "";
let previousLabel = "";
let next = "";
let nextLabel = "";

if (currentSidebarIndex > -1) {
	const previousIndex = currentSidebarIndex - 1;
	const nextIndex = currentSidebarIndex + 1;

	// Show previous label if this is not the first subsection
	if (currentSidebarIndex > 0) {
		previous = sidebarSubsections[previousIndex].link;
		previousLabel = sidebarSubsections[previousIndex].text;
	}

	// Show next label if this is not the last subsection
	if (currentSidebarIndex < sidebarSubsections.length - 1) {
		next = sidebarSubsections[nextIndex].link;
		nextLabel = sidebarSubsections[nextIndex].text;
	}
}

const { page } = Astro.props;
const { Content } = await page.render();
---

<DocLayout summary={sidebar}>
	<div class="md-content doc-content">
		<Content />
		<br />
		<PageNav
			previous={previous}
			previousLabel={previousLabel}
			next={next}
			nextLabel={nextLabel}
		/>
	</div>
</DocLayout>
