---
interface Props {
	title?: string;
	infoType?: string;
}

const { title, infoType } = Astro.props as Props;

let bgColorClass = "";
let moreInfo = false;

switch (infoType) {
	// Default
	case "none":
	case "neutral":
	default:
		bgColorClass = "rift-info-box-bg";
		break;

	// Info
	case "info":
	case "tip":
		bgColorClass = "bg-info";
		break;

	// Warning
	case "warning":
	case "caution":
		bgColorClass = "bg-warning";
		break;

	// Danger
	case "danger":
	case "error":
		bgColorClass = "bg-error";
		break;

	// More info
	case "more":
	case "more-info":
		bgColorClass = "rift-info-box-bg";
		moreInfo = true;
		break;
}

// BUG: If the InfoBox tag is on one line in the markdown, the text will be inside a #text instead of a <p> tag.

// BAD
// <InfoBox title="Info">There is an imposter among us.</InfoBox>

// GOOD
// <InfoBox title="Info">
// There is an imposter among us.
// </InfoBox>

// Who knows why this happens
---

{
	// TOP: More info box
	// BOTTOM: Normal info box
	moreInfo ? (
		<details class:list={["rift-info-box", bgColorClass, "flex", "flex-col", "gap-2", "p-3"]}>
			<summary class="font-bold text-base-content">{title}</summary>
			<slot />
		</details>
	) : (
		<div class:list={["rift-info-box", bgColorClass, "flex", "flex-col", "gap-2", "p-3"]}>
			<p class="font-bold">{title}</p>
			<slot />
		</div>
	)
}
